//  #include <time.h>
#include <Arduino.h>
#include <OneWire.h>
#include <DS18B20.h>
#include "ThingSpeak.h"
#include <TridentTD_LineNotify.h>    //LINE
#include <BlynkSimpleEsp8266.h>      // BLYNK


char auth[] = "JX0m0y_m5FomW9eEFnhhZK7pTfNlA8L9";
//thingspeak
unsigned long  myChannelNumber = 914246 ;
const char   * myWriteAPIKey      = "H9JOOZ14XZR40QEG"; 
const char* server    = "api.thingspeak.com";

//line
#define LINE_TOKEN  "xnirEr9FSMfvD2QO6D1oNU7ZibGFkc9GphXjq4Kyeza"

WidgetLED led(V3);
WidgetLED ledlink(V7);
BlynkTimer timer;

/*สายไฟ*/
#define ONE_WIRE_BUS D4
OneWire oneWire(ONE_WIRE_BUS);
DS18B20 sensor(&oneWire);

float sensorTemp();
String timenows();
String daynows();

// oxygen//
const float SaturationValueTab[41] PROGMEM = {
    //saturation dissolved oxygen concentrations at various temperatures
    14.46,
    14.22,
    13.82,
    13.44,
    13.09,
    12.74,
    12.42,
    12.11,
    11.81,
    11.53,
    11.26,
    11.01,
    10.77,
    10.53,
    10.30,
    10.08,
    9.86,
    9.66,
    9.46,
    9.27,
    9.08,
    8.90,
    8.73,
    8.57,
    8.41,
    8.25,
    8.11,
    7.96,
    7.82,
    7.69,
    7.56,
    7.43,
    7.30,
    7.18,
    7.07,
    6.95,
    6.84,
    6.73,
    6.63,
    6.53,
    6.41,
};

float sensorDo()
{
   char DoBlynk[16];
  int sensorValue = 0, avg_sensor = 0;
  // int  sensorValue = analogRead(A0);                                
  for (int i = 0; i < 300; i++)      /*หาค่า เฉลี่ยของการอ่าน analog */
  {
    sensorValue += analogRead(A0);
  }

  avg_sensor = sensorValue / 300;
  // Serial.println("SensorValue : " + (String)sensorValue + "avgsensor : " + (String)avg_sensor);

  float doValue = 0.0;
  float temp = sensorTemp() + 0.5;
  //float Pr = SaturationValueTab[0];

  doValue = pgm_read_float(&SaturationValueTab[0] + (int)temp);
  float volts = (3000 * ((float)avg_sensor / 1023));
  float Do = (doValue * volts) / 1127.6;

  Serial.println("temp : = " + (String)temp);
  Serial.println("analogreadDo : " + (String)avg_sensor + " DO : " + (String)Do);
  Serial.println("volt : " + (String)volts);
  dtostrf(Do, 2, 2 , DoBlynk);
  Blynk.virtualWrite(V1, DoBlynk);  
  return Do;

}

float sensorTemp()
{

  float temp;
   char  tempBlynk[16];
  sensor.requestTemperatures();
  //Serial.println(sensor.getTempC());
  temp = sensor.getTempC();
  // sendfirebase("Temp", temp);
  dtostrf(temp, 2, 2 , tempBlynk);
  Blynk.virtualWrite(V2, tempBlynk);
  // ThingSpeak.setField(3, temp);
  return temp;
}
float sensorPh(String value)
{
  float b = value.toFloat();
  float a = (b * 0.067) + 2.6002;
  Serial.println("analogreadPH :  " + value + " PH : " + (String)a);
  return a;
}
float send_data()
{
    ThingSpeak.setField(2,sensorDo());
    ThingSpeak.setField(3,sensorTemp());
    ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);
    //  LINE.notify("DO : "+ (String)sensorDo());
}
void onoffsensor()
{
  if (ledlink.getValue())
  {
    ledlink.off();
  }
  else {
    ledlink.on();
  }
}
